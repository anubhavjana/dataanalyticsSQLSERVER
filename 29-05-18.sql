--29-05-18

ALTER SCHEMA outbound TRANSFER dbo.summ_n; 
SELECT COUNT(SALESID)
FROM OUTBOUND.summ_n
WHERE CUSTOMERID LIKE 'ALFKI'
select * from ref.lkp_n
SELECT * FROM REF.DIM_PRODUCT
SELECT * FROM OUTBOUND.SUMM_N
SELECT * FROM REF.LKP_N
SELECT * FROM REF.SALESDETAILS_N
SELECT  * FROM REF.DIM_CATEGORY
select * FROM OUTBOUND.summ_n
SELECT * FROM REF.DIM_PRODUCT

--OPTIMIZING THE OUTBOUND TABLE 
INSERT INTO OUTBOUND.SUMM_N
SELECT 
	A.ORDERID,A.EMPLOYEEID,
	B.PRODUCTID,
	C.CUSTOMERID,C.CONTACTNAME,C.ADDRESS,C.COMPANYNAME,
	D.PRODUCTNAME,D.SUPPLIERID,D.categoryid,
	E.EMPLOYEENAME,
	F.CATEGORYNAME

FROM REF.LKP_N A
INNER JOIN REF.SALESDETAILS_N B ON A.ORDERID = B.salesid
INNER JOIN REF.DIM_CUSTOMER C ON A.customerid = C.CUSTOMERID
INNER JOIN REF.DIM_PRODUCT D ON B.PRODUCTID=D.itemid
INNER JOIN REF.DIM_EMPLOYEE E ON A.EMPLOYEEID=E.EMPLOYEEID
INNER JOIN REF.DIM_CATEGORY F ON D.categoryid=F.CATEGORYID


--PERFORMANCE OF EMPLOYREE MONTHWISE(REPORT 4)

SELECT  ROUND(SUM(UNITPRICE*QUANTITY), 2) AS TOTALSALES ,DATENAME(MONTH,SALEDATE) AS MONTHSALE,OS.EMPLOYEEID,OS.EMPLOYEENAME,DM.ADDRESS,DM.HIREDATE,DM.CITY,DM.COUNTRY,DENSE_RANK() OVER( ORDER BY ROUND(SUM(UNITPRICE*QUANTITY), 2 )DESC)AS RANK
FROM REF.SALESDETAILS_N SN  
JOIN OUTBOUND.SUMM_n OS ON OS.SALESID=SN.SALESID
INNER JOIN REF.DIM_EMPLOYEE DM ON OS.EMPLOYEEID=DM.EMPLOYEEID
WHERE DATENAME(MONTH,SN.SALEDATE) LIKE 'MAY'   --FILTER BY MAY 
GROUP BY DATENAME(MONTH,SALEDATE),OS.EMPLOYEEID,OS.EMPLOYEENAME,DM.ADDRESS,DM.HIREDATE,DM.CITY,DM.COUNTRY


--PERFORMANCE OF EMPLOYREE YEARWISE(REPORT 5)

SELECT  ROUND(SUM(UNITPRICE*QUANTITY), 2) AS TOTALSALES ,DATENAME(YEAR,SALEDATE) AS YEARSALE,OS.EMPLOYEEID,OS.EMPLOYEENAME,DM.ADDRESS,DM.HIREDATE,DM.CITY,DM.COUNTRY,DENSE_RANK() OVER( ORDER BY ROUND(SUM(UNITPRICE*QUANTITY), 2 )DESC)AS RANK
FROM REF.SALESDETAILS_N SN  
JOIN OUTBOUND.SUMM_n OS ON OS.SALESID=SN.SALESID
INNER JOIN REF.DIM_EMPLOYEE DM ON OS.EMPLOYEEID=DM.EMPLOYEEID
WHERE DATENAME(YEAR,SN.saledate)=2016  --FILTER BY 2016
GROUP BY DATENAME(YEAR,SALEDATE),OS.EMPLOYEEID,OS.EMPLOYEENAME,DM.ADDRESS,DM.HIREDATE,DM.CITY,DM.COUNTRY



--TOTAL PURCHASE OF CUSTOMER (REPORT 1)

SELECT ROUND(SUM(UNITPRICE*QUANTITY), 2) AS TOTALPURCHASE,OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY
FROM REF.SALESDETAILS_N SN
JOIN OUTBOUND.SUMM_n OS ON OS.SALESID=SN.SALESID
JOIN REF.DIM_CUSTOMER  DC ON DC.CUSTOMERID=OS.CUSTOMERID
GROUP BY OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY

--MAX PURCHASE FROM CUSTOMER (REPORT 2)

SELECT   ROUND(MAX(UNITPRICE*QUANTITY), 2) AS MAXPURCHASE,OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY, DENSE_RANK() OVER( ORDER BY ROUND(MAX(UNITPRICE*QUANTITY), 2) DESC)AS RANK
 FROM REF.SALESDETAILS_N SN
JOIN OUTBOUND.SUMM_n OS ON OS.SALESID=SN.SALESID
JOIN REF.DIM_CUSTOMER  DC ON DC.CUSTOMERID=OS.CUSTOMERID
GROUP BY OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY
ORDER BY MAXPURCHASE DESC


--NO OF VISITS PER CUSTOMER (REPORT 3)

SELECT  COUNT(SALESID) AS NUMBEROFVISITS,OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY, DENSE_RANK() OVER( ORDER BY COUNT(SALESID) DESC)AS RANK
FROM OUTBOUND.summ_n OS
INNER JOIN REF.DIM_CUSTOMER DC ON OS.CUSTOMERID=DC.CUSTOMERID
GROUP BY OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY
ORDER BY NUMBEROFVISITS DESC

--TOP 5 VISITS

SELECT   TOP 5 COUNT(SALESID) AS NUMBEROFVISITS,OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY, DENSE_RANK() OVER( ORDER BY COUNT(SALESID) DESC)AS RANK
FROM OUTBOUND.summ_n OS
INNER JOIN REF.DIM_CUSTOMER DC ON OS.CUSTOMERID=DC.CUSTOMERID
GROUP BY OS.CUSTOMERID,OS.CONTACTNAME,DC.PHONE,DC.COMPANYNAME,DC.ADDRESS,DC.CITY,DC.COUNTRY
ORDER BY NUMBEROFVISITS DESC


--NUMBER OF PRODUCTS SOLD PER PRODUCTID

select  count(SALESID) as noofproductssold,ITEMID,PRODUCTNAME
from OUTBOUND.summ_n
group by itemid,PRODUCTNAME
ORDER by  noofproductssold desc

SELECT * FROM OUTBOUND.summ_n

SELECT SUM(QUANTITY) AS TOTALUNITCONSUMED,SN.PRODUCTID
FROM REF.SALESDETAILS_N SN
GROUP BY SN.PRODUCTID

--AVERAGE UNIT CONSUMED PER PRODUCT (REPORT 6)

SELECT SN.PRODUCTID,os.PRODUCTNAME, AVG(QUANTITY) AS AVERAGEUNITCONSUMED,DENSE_RANK() OVER( ORDER BY AVG(SN.QUANTITY) DESC) AS RANK
FROM REF.SALESDETAILS_N SN
INNER JOIN OUTBOUND.summ_n os on os.ITEMID=sn.PRODUCTID
GROUP BY SN.PRODUCTID,os.PRODUCTNAME
order  by averageunitconsumed desc

--CATEGORYWISE UNIT SOLD IN ALL THE MONTHS(REPORT 7)

SELECT COUNT(ITEMID) AS UNITSOLD,CATEGORYID,DATENAME(MONTH,SN.saledate) AS MONTHTIME       
FROM OUTBOUND.summ_n OS
JOIN REF.SALESDETAILS_N SN ON SN.SALESID=OS.SALESID
WHERE OS.CATEGORYID=4 AND  DATENAME(MONTH,SN.saledate) IS NOT NULL--FILTER BY CATEGORYID
GROUP BY CATEGORYID,DATENAME(MONTH,SN.saledate)



CREATE TABLE REF.INVENTORY(PRODUCTID INT,INDATE DATETIME,OUTDATE DATETIME,SUPPLIERID INT,PRODUCTNAME NVARCHAR(40),QUANTITY INT, UNITPRICE MONEY)
INSERT INTO REF.INVENTORY(PRODUCTID,SUPPLIERID,PRODUCTNAME,UNITPRICE)
SELECT REF.DIM_PRODUCT.itemid,REF.DIM_PRODUCT.SUPPLIERID,REF.DIM_PRODUCT.PRODUCTNAME,REF.DIM_PRODUCT.UNITPRICE
FROM REF.DIM_PRODUCT

INSERT INTO REF.INVENTORY(PRODUCTID)
SELECT itemid FROM REF.DIM_PRODUCT


;WITH INVENT(INDATE,OUTDATE,QUANTITY)
AS
(
  SELECT GETDATE()-78 AS INDATE,GETDATE()+77 AS OUTDATE,100 QUANTITY
  UNION ALL
  SELECT DATEADD(DAY,1,INDATE),DATEADD(DAY,2,OUTDATE), QUANTITY +  CONVERT(INT,RAND()*100) QUANTITY
  FROM INVENT
  WHERE QUANTITY< 177 AND INDATE<GETDATE()-1 AND OUTDATE<GETDATE()+154 
    )
  INSERT INTO REF.INVENTORY(PRODUCTID,INDATE,OUTDATE,SUPPLIERID,PRODUCTNAME,QUANTITY,UNITPRICE)
  SELECT  DM.itemid,I.INDATE,I.OUTDATE,DM.SUPPLIERID,DM.PRODUCTNAME,I.QUANTITY,DM.UNITPRICE FROM INVENT I,REF.DIM_PRODUCT DM
  
  OPTION(MAXRECURSION 77)

  SELECT * FROM REF.INVENTORY
  DELETE FROM REF.INVENTORY














